name: tests

on: [push, pull_request]

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.7.17"
      - name: Install dependencies
        run: |
          uv sync --extra dev
      - name: Install pre-commit hooks
        run: |
          uv run pre-commit install --install-hooks
      - name: Run linters
        run: |
          uv run pre-commit run --all-files --verbose

  test:
    needs: linting
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
        include:
          # Use ubuntu-22.04 specifically for Python 3.11 to avoid runner issues
          - os: "ubuntu-22.04"
            python-version: "3.11"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.7.17"
      - name: Install dependencies
        run: |
          uv sync --extra dev
      - name: Debug environment
        run: |
          echo "Python version: $(python --version)"
          echo "uv version: $(uv --version)"
          uv tree
          uv run python -c "import sys; print('Python executable:', sys.executable)"
      - name: Clear Python cache
        run: |
          find . -type d -name __pycache__ -exec rm -rf {} + || true
          find . -name "*.pyc" -delete || true
      - name: Run tests without coverage (debug)
        run: |
          uv run pytest tests/ -v --tb=long
      - name: Run tests with coverage
        run: |
          if [[ "${{ matrix.python-version }}" == "3.11" && "${{ matrix.os }}" == *"ubuntu"* ]]; then
            # Skip coverage for Python 3.11 on Ubuntu due to tool compatibility issues
            uv run pytest tests/ -v
          else
            uv run pytest tests/ --cov=src/munge --cov-report=xml -v --tb=long --no-cov-on-fail
          fi
      - name: Upload coverage
        if: ${{ !(matrix.python-version == '3.11' && contains(matrix.os, 'ubuntu')) }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true